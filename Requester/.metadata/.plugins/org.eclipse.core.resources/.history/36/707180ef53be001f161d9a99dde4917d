import java.io.*;
import java.net.*;
import java.util.*;

public class Client {
	Socket requestSocket;
	ObjectOutputStream out;
	ObjectInputStream in;
	String message;
	int result;
	Scanner input;

	Client() {
		input = new Scanner(System.in);
	}

	void run() {
	    try {
	        // Creating a socket to connect to the server
	        requestSocket = new Socket("127.0.0.1", 2004);
	        System.out.println("Connected to localhost in port 2004");

	        // Setup Input and Output streams
	        out = new ObjectOutputStream(requestSocket.getOutputStream());
	        out.flush();
	        in = new ObjectInputStream(requestSocket.getInputStream());

	        boolean exit = false;
	        boolean loggedIn = false; // Track whether the user is logged in

	        do {
	            // Display menu from server
	            message = (String) in.readObject();
	            System.out.println(message);

	            // Get user input
	            message = input.nextLine().trim(); // Trim spaces

	            if (message.isEmpty()) {
	                System.out.println("Invalid choice. Please enter a valid option.");
	                continue; // Skip sending and go back to the menu
	            }

	            // Send message to server
	            sendMessage(message);

	            if (!loggedIn) {
	                // Handle main menu options
	                switch (message) {
	                    case "1":
	                        // Login
	                        loggedIn = handleLogin();
	                        break;
	                    case "2":
	                        // Register
	                        handleRegistration();
	                        break;
	                    case "-1":
	                        // Exit
	                        exit = true;
	                        System.out.println("Exiting the application.");
	                        break;
	                    default:
	                        System.out.println("Invalid choice. Please enter 1, 2, or -1.");
	                        break;
	                }
	            } else {
	                // Handle logged-in menu options
	                switch (message) {
	                    case "1":
	                        System.out.println("Creating a Health and Safety Report...");
	                        break;
	                    case "2":
	                        System.out.println("Retrieving all Accident Reports...");
	                        break;
	                    case "3":
	                        System.out.println("Assigning a Health & Safety Report...");
	                        break;
	                    case "4":
	                        System.out.println("Viewing all reports assigned to you...");
	                        break;
	                    case "5":
	                        System.out.println("Updating password...");
	                        break;
	                    case "6":
	                        System.out.println("Logging out...");
	                        loggedIn = false;
	                        break;
	                    default:
	                        System.out.println("Invalid choice. Please enter 1 to 6.");
	                        break;
	                }
	            }
	        } while (!exit);

	    } catch (IOException ioException) {
	        ioException.printStackTrace();
	    } catch (ClassNotFoundException classNotFound) {
	        System.err.println("Data received in unknown format");
	    } finally {
	        closeConnection();
	    }
	}


	void sendMessage(String msg) {
		try {
			out.writeObject(msg); // send the message to the server
			out.flush();
			//System.out.println("client: " + msg); // debugging
		} catch (IOException ioException) {
			ioException.printStackTrace();
		}
	}

	private void handleLogin() throws IOException, ClassNotFoundException {
	    boolean loggedIn = false;
		do {
			// Email
			message = (String) in.readObject();
			System.out.println(message);
			String email = input.nextLine();
			sendMessage(email);

			// Password
			message = (String) in.readObject();
			System.out.println(message);
			String password = input.nextLine();
			sendMessage(password);

			//Check login results
			message = (String) in.readObject();
			System.out.println(message);
			if (message.startsWith("Login successful")) {
				loggedIn = true;
	        } else {
				loggedIn = false;
	        }
	    } while (!loggedIn);
	}

	private void handleRegistration() throws IOException, ClassNotFoundException {
			 // Name
	    	message = (String)in.readObject();
			System.out.println(message);
			message = input.nextLine();
			sendMessage(message);
			
			// Employee ID no
			message = (String)in.readObject();
			System.out.println(message);
			message = input.nextLine();
			sendMessage(message);
			
			// Email
	    	message = (String)in.readObject();
			System.out.println(message);
			message = input.nextLine();
			sendMessage(message);
			
			// Password
			message = (String)in.readObject();
			System.out.println(message);
			message = input.nextLine();
			sendMessage(message);
			
			// Department Name
	    	message = (String)in.readObject();
			System.out.println(message);
			message = input.nextLine();
			sendMessage(message);
			
			// Role
			message = (String)in.readObject();
			System.out.println(message);
			message = input.nextLine();
			sendMessage(message);
			
			message = (String)in.readObject();
			System.out.println(message);
	}

	private void closeConnection() {
		// 4: Closing connection
		try {
			if (in != null)
				in.close();
			if (out != null)
				out.close();
			if (requestSocket != null)
				requestSocket.close();
		} catch (IOException ioException) {
			ioException.printStackTrace();
		}
	}

	public static void main(String args[]) {
		Client client = new Client();
		client.run();
	}
}