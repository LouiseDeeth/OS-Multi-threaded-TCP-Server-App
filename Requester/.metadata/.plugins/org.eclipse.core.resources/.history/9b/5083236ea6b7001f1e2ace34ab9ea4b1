import java.io.*;
import java.net.*;
import java.util.*;

public class Client {
	Socket requestSocket;
	ObjectOutputStream out;
	ObjectInputStream in;
	String message;
	int result;
	Scanner input;

	Client() {

		input = new Scanner(System.in);
	}

	void run(){
		try {
			//1. creating a socket to connect to the server
			requestSocket = new Socket("127.0.0.1", 2004);
			System.out.println("Connected to localhost in port 2004");
			
			//2. get Input and Output streams
			out = new ObjectOutputStream(requestSocket.getOutputStream());
			out.flush();
			in = new ObjectInputStream(requestSocket.getInputStream());	
			
			do {
					do
					{
						message = (String)in.readObject();
						System.out.println(message);
						message = input.nextLine();
						sendMessage(message);
					}while(!message.equalsIgnoreCase("1")&&!message.equalsIgnoreCase("2"));			
								
			    if(message.equalsIgnoreCase("1")) {
			    	// Handle login
			    	//Email
			    	message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					//Password
					message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
                } 
			    else if(message.equalsIgnoreCase("2")) {
                    // Name
			    	message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					// Employee ID no
					message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					// Email
			    	message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					// Password
					message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					// Department Name
			    	message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					// Role
					message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
                } 
				
			}while (message.equalsIgnoreCase("1"));
			sendMessage("Exiting");
			
			//3: Communicating with the server
			do
			{

			    if(message.equalsIgnoreCase("1"))
			    {
			    	//Name
			    	message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					//Password
					message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
			    }
			    else if(message.equalsIgnoreCase("2"))
			    {
			    	//Name
			    	message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					//Employee ID number
					message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					//Email
					message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					//Password
					message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					//Department Name
					message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					//Role
					message = (String)in.readObject();
					System.out.println(message);
					message = input.nextLine();
					sendMessage(message);
					
					if(message.equalsIgnoreCase("-1"))
					{
						System.out.println("The user does not exist");
					}
					else
					{
						String[] resultPart = message.split(", ");
						System.out.print("Name "+resultPart[0]);
						System.out.print("Employee ID "+resultPart[1]);
						System.out.print("Email "+resultPart[2]);
						System.out.print("Password "+resultPart[3]);
						System.out.print("Department Name "+resultPart[4]);
						System.out.print("Role "+resultPart[5]);	
					}
			    }
			    
			    else if(message.equalsIgnoreCase("3"))
			    {
			    	message = (String)in.readObject();	
			    	result = Integer.parseInt(message);
			    	
			    	for(int i=0;i<result;i++)
			    	{
			    		message = (String)in.readObject();
			    		System.out.println(message);
			    	}
			    }
			    
			    
			    message = (String)in.readObject();
			    System.out.println(message);
			    message = input.nextLine();
			    sendMessage(message);
		} while(message.equalsIgnoreCase("1"));
	    
		} catch (UnknownHostException unknownHost) {
			System.err.println("You are trying to connect to an unknown host!");
		} catch (IOException ioException) {
			ioException.printStackTrace();
		} catch (ClassNotFoundException classNotFound) {
			System.err.println("Data received in unknown format");		
		} finally {
			// 4: Closing connection
			try {
				if (in != null) in.close();
				if (out != null) out.close();
				if (requestSocket != null) requestSocket.close();
			} catch (IOException ioException) {
				ioException.printStackTrace();
			}
		}
	}

	void sendMessage(String msg) {
		try {
			out.writeObject(msg); // send the message to the server
			out.flush();
			System.out.println("client: " + msg);
		} catch (IOException ioException) {
			ioException.printStackTrace();
		}
	}

	public static void main(String args[]) {
		Client client = new Client();
		client.run();
	}
}